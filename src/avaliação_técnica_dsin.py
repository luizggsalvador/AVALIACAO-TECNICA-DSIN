# -*- coding: utf-8 -*-
"""AVALIAÇÃO TÉCNICA DSIN

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1O1U405TPsIKWwOiIY_5FaCmx_gAqTw_s
"""

# Commented out IPython magic to ensure Python compatibility.
!pip install ipython-sql
# %load_ext sql

# Commented out IPython magic to ensure Python compatibility.
# %sql sqlite:///agendamentos.db

# Commented out IPython magic to ensure Python compatibility.
# %%sql
# CREATE TABLE IF NOT EXISTS agendamentos (
#     id INTEGER PRIMARY KEY AUTOINCREMENT,
#     nome TEXT NOT NULL,
#     servico TEXT NOT NULL,
#     data TEXT NOT NULL
# );

# Commented out IPython magic to ensure Python compatibility.
# %%writefile database.py
# 
# import sqlite3
# from datetime import datetime, timedelta
# 
# def conectar():
#     return sqlite3.connect('agendamentos.db')
# 
# def adicionar_agendamento(nome, servico, data):
#     conn = conectar()
#     cursor = conn.cursor()
#     cursor.execute("INSERT INTO agendamentos (nome, servico, data) VALUES (?, ?, ?)", (nome, servico, data))
#     conn.commit()
#     conn.close()
# 
# def ver_historico():
#     conn = conectar()
#     cursor = conn.cursor()
#     for row in cursor.execute("SELECT * FROM agendamentos"):
#         print(row)
#     conn.close()
# 
# def alterar_agendamento(id, nova_data):
#     conn = conectar()
#     cursor = conn.cursor()
#     cursor.execute("SELECT data FROM agendamentos WHERE id=?", (id,))
#     data_atual = cursor.fetchone()[0]
#     data_agendamento = datetime.strptime(data_atual, "%d/%m/%Y")
# 
#     if data_agendamento - datetime.now() > timedelta(days=2):
#         cursor.execute("UPDATE agendamentos SET data=? WHERE id=?", (nova_data, id))
#         conn.commit()
#     else:
#         print("Alteração só pode ser feita por telefone.")
#     conn.close()
#

# Commented out IPython magic to ensure Python compatibility.
# %run database.py

from database import adicionar_agendamento, ver_historico, alterar_agendamento
from datetime import datetime, timedelta

def obter_semana(data):
    data_obj = datetime.strptime(data, "%d/%m/%Y")
    return data_obj.isocalendar()[1]

def main():
    while True:
        print("\n1. Fazer Agendamento")
        print("2. Ver Histórico")
        print("3. Alterar Agendamento")
        print("4. Sair")

        escolha = input("Escolha uma opção: ")

        if escolha == '1':
            nome = input("Nome do cliente: ")
            servico = input("Serviço: ")
            data = input("Data (dd/mm/yyyy): ")

            conn = sqlite3.connect('agendamentos.db')
            cursor = conn.cursor()
            cursor.execute("SELECT data FROM agendamentos WHERE nome = ?", (nome,))
            agendamentos = cursor.fetchall()

            if agendamentos:
                semana_atual = obter_semana(data)
                for agendamento in agendamentos:
                    semana_agendada = obter_semana(agendamento[0])
                    if semana_agendada == semana_atual:
                        print(f"Você já tem um agendamento para essa semana na data {agendamento[0]}. Deseja agendar para essa mesma data?")
                        resposta = input("S (Sim) ou N (Não): ").lower()
                        if resposta == 's':
                            data = agendamento[0]
                            break

            adicionar_agendamento(nome, servico, data)
        elif escolha == '2':
            ver_historico()
        elif escolha == '3':
            id_agendamento = input("ID do Agendamento para alterar: ")
            nova_data = input("Nova data (dd/mm/yyyy): ")
            alterar_agendamento(id_agendamento, nova_data)
        elif escolha == '4':
            break
        else:
            print("Opção inválida.")

if __name__ == "__main__":
    main()